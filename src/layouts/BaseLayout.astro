---
import BackToTop from "@/components/common/BackToTop.astro";
import Container from "@/components/common/Container.astro";
import Footer from "@/components/layout/Footer.astro";
import Head from "@/components/layout/Head.astro";
import Header from "@/components/layout/Header.astro";
import "@/styles/app.css";

const {
  pageSubtitle,
  pageTitle,
  description = "Alexandre Mouriec's personal website",
  showHeader = true,
  showTitle = true,
  showReadingProgress = false,
} = Astro.props;
---

<html lang="en">
  <Head description={description} title={pageTitle || "Alexandre Mouriec"} />
  <body class="flex min-h-screen flex-col bg-white dark:bg-zinc-900">
    {showReadingProgress && (
      <div class="reading-progress fixed top-0 left-0 w-full h-0.5 z-50 bg-zinc-200 dark:bg-zinc-700">
        <div class="reading-progress-bar h-full bg-gradient-to-r from-blue-500 to-blue-700" style="width: 0%"></div>
      </div>
    )}
    
    <main
      class="mx-auto flex w-full grow flex-col px-4 py-12 text-base text-zinc-800 sm:px-6 lg:px-8 dark:text-zinc-200"
    >
      {showHeader && <Header />}

      {
        showTitle && pageTitle && (
          <div class="mx-auto mb-4 max-w-3xl text-center">
            <h1 class="font-serif text-3xl leading-tight font-medium tracking-tight text-zinc-900 sm:text-4xl dark:text-zinc-100">
              {pageTitle}
            </h1>
            {pageSubtitle && (
              <p class="text-md mt-2 font-light text-zinc-600 dark:text-zinc-400">
                {pageSubtitle}
              </p>
            )}
          </div>
        )
      }

      <Container>
        <slot />
      </Container>
    </main>
    <Footer />
    <BackToTop />
    
    {showReadingProgress && (
      <style>
        /* Modern scroll-driven animations for supported browsers */
        @supports (animation-timeline: scroll()) {
          .reading-progress-bar {
            animation: reading-progress linear;
            animation-timeline: scroll(nearest);
            animation-range: 0 100%;
          }

          @keyframes reading-progress {
            to {
              width: 100%;
            }
          }
        }
      </style>
    )}

    {showReadingProgress && (
      <script>
        // JavaScript fallback for browsers that don't support scroll-driven animations
        if (!CSS.supports('animation-timeline', 'scroll()')) {
          const progressBar = document.querySelector('.reading-progress-bar') as HTMLElement;
          if (progressBar) {
            window.addEventListener('scroll', () => {
              const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
              const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;
              const scrollPercent = (scrollTop / scrollHeight) * 100;
              progressBar.style.width = scrollPercent + '%';
            });
          }
        }
      </script>
    )}
  </body>
</html>
