---
const { book } = Astro.props;

// Handle both book.data and book formats
const bookData = "data" in book ? book.data : book;
const bookId = "id" in book ? book.id : undefined;
---

<div class="group relative flex flex-col items-center text-center">
  <div class="w-20 sm:w-28 md:w-32 lg:w-36">
    {
      bookId ? (
        <a
          aria-label={`View details for ${bookData.title}`}
          href={`/books/${bookId}`}
        >
          <div class="relative mb-4 aspect-[2/3] w-full">
            <img
              alt={bookData.cover_image.cover_image_alt}
              class="transition-optimized hover-scale absolute inset-0 h-full w-full rounded-sm object-cover shadow-sm"
              decoding="async"
              loading="lazy"
              src={bookData.cover_image.cover_image_url}
            />
          </div>
        </a>
      ) : (
        <div class="relative mb-4 aspect-[2/3] w-full">
          <img
            alt={bookData.cover_image.cover_image_alt}
            class="transition-optimized hover-scale absolute inset-0 h-full w-full rounded-sm object-cover shadow-sm"
            decoding="async"
            loading="lazy"
            src={bookData.cover_image.cover_image_url}
          />
        </div>
      )
    }
  </div>
  {
    bookId ? (
      <a
        class="line-clamp-2 text-sm font-semibold hover:underline"
        href={`/books/${bookId}`}
      >
        {bookData.title}
      </a>
    ) : (
      <h2 class="line-clamp-2 text-sm font-semibold">{bookData.title}</h2>
    )
  }
  <p class="text-sm font-light opacity-80">by {bookData.author}</p>

  <div
    class="transition-optimized absolute top-full left-1/2 z-10 mt-2 w-48 max-w-[calc(100vw-2rem)] -translate-x-1/2 rounded-lg bg-black/80 p-2 text-sm text-white opacity-0 group-hover:opacity-100 sm:w-64"
  >
    {bookData.title}
  </div>
</div>
