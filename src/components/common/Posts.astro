---
import FormattedDate from "@/components/common/FormattedDate.astro";
import Icon from "@/components/common/Icon.astro";

const {
  basePath = "/blog",
  emptyMessage = "No posts yet. Check back soon!",
  entries,
  externalLinks = false,
  limit,
  showEmptyMessage = true,
} = Astro.props;

const displayEntries = limit ? entries.slice(0, limit) : entries;
---

<section class="posts">
  <ul class="h-feed space-y-6">
    {
      displayEntries.map((entry) => (
        <li>
          <article class="border-zinc/15 hover:bg-zinc/5 h-entry group relative rounded-lg border border-dashed shadow-xs transition-colors duration-300 ease-in-out hover:bg-black/5 dark:border-white/20 dark:hover:bg-white/5">
            <a
              class="u-url flex items-center gap-4 px-4 py-3"
              href={
                externalLinks ? entry.data.link : `${basePath}/${entry.slug}/`
              }
              target={externalLinks ? "_blank" : undefined}
            >
              <div class="flex flex-1 flex-col truncate">
                <h3 class="p-name truncate text-sm font-semibold">
                  {entry.data.title}
                </h3>
                <p class="e-content truncate text-sm font-light opacity-80">
                  {entry.data.description}
                </p>
              </div>

              <time class="text-sm italic opacity-60" datetime={entry.data.pubDate.toISOString()}>
                <FormattedDate class="dt-published" date={entry.data.pubDate} />
              </time>

              <Icon
                class="transition-optimized h-4 w-4 opacity-60 group-hover:translate-x-1 group-hover:opacity-100"
                name="arrow-right"
              />
            </a>
          </article>
        </li>
      ))
    }
  </ul>

  {
    showEmptyMessage && displayEntries.length === 0 && (
      <p class="fade-in text-center text-gray-500 dark:text-gray-400">
        {emptyMessage}
      </p>
    )
  }
</section>
